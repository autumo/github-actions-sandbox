name: Sandbox Actions

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  check_for_changes:
    runs-on: ubuntu-latest
    outputs:
      sql-cache-hit: ${{ steps.cache-sql.outputs.cache-hit }}
      root-cache-hit: ${{ steps.cache-sql.outputs.cache-root }}
    steps:

      - name: echo vars
        run: echo ${{ vars.HOGE }}

      - name: add vars to env
        shell: bash
        run: |
          echo "HOGE=${{ vars.HOGE }}" >> "$GITHUB_ENV"

      - name: echo env
        run: echo ${{ env.HOGE }}
        shell: bash

      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Restore cache sql directory
        id: cache-sql
        uses: actions/cache/restore@v3.3.2
        with:
          path: sql/
          key: sql-${{ hashFiles('sql/') }}
          restore-keys: |
            sql-${{ hashFiles('sql/') }}

      - name: Restore cache root
        id: cache-root
        uses: actions/cache/restore@v3.3.2
        with:
          path: |
            .github/actions/setup/action.yaml
            .github/workflows/run.yaml
            fuga.sql
          key: root-${{ hashFiles('.github/workflows/run.yaml', '.github/actions/setup/action.yaml', 'fuga.sql') }}
          restore-keys: |
            root-${{ hashFiles('.github/workflows/run.yaml', '.github/actions/setup/action.yaml', 'fuga.sql') }}

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

  plan:
    needs: check_for_changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory:
          - sql
    steps:

      - name: echo vars and env
        run: |
          echo ${{ vars.HOGE }}
          echo ${{ env.HOGE }}

      - name: Checkout the repository
        uses: actions/checkout@v4.1.1

      - name: Setup
        id: setup
        uses: ./.github/actions/setup
        with:
          directory: ${{ matrix.directory }}
          sql-cache-hit: ${{ needs.check_for_changes.outputs.sql-cache-hit }}
          root-cache-hit: ${{ needs.check_for_changes.outputs.root-cache-hit }}

      - name: Plan
        if: steps.setup.outputs.skip != 'true'
        run: | 
          echo "SQL Plan"
          echo "${{github.ref}}"
          echo "${GITHUB_REF#refs/heads/}"
          echo "${{github.head_ref}}"
          if [[ ${{github.head_ref}} =~ (cache)+ ]]; then
            OPTION="-detailed-exitcode"
          fi
          
          echo "terraform plan $OPTION"
  apply:
    if: github.ref == 'refs/heads/main'
    needs:
      - check_for_changes
      - plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4.1.1

      - name: Setup
        id: setup
        uses: ./.github/actions/setup
        with:
          directory: ${{ matrix.directory }}
          sql-cache-hit: ${{ needs.check_for_changes.outputs.sql-cache-hit }}
          root-cache-hit: ${{ needs.check_for_changes.outputs.root-cache-hit }}

      - name: Run
        if: steps.setup.outputs.skip != 'true'
        run: echo "Run SQL"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save cache sql directory
        id: cache-sql
        uses: actions/cache/save@v3.3.2
        with:
          path: sql/
          key: sql-${{ hashFiles('sql/') }}
          restore-keys: |
            sql-${{ hashFiles('sql/') }}

      - name: Save cache root
        id: cache-root
        uses: actions/cache/save@v3.3.2
        with:
          path: |
            .github/actions/setup/action.yaml
            .github/workflows/run.yaml
            fuga.sql
          key: root-${{ hashFiles('.github/workflows/run.yaml', '.github/actions/setup/action.yaml', 'fuga.sql') }}
          restore-keys: |
            root-${{ hashFiles('.github/workflows/run.yaml', '.github/actions/setup/action.yaml', 'fuga.sql') }}
